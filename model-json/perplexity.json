{
  "provider": {
    "name": "Perplexity",
    "imageUrl": "",
    "description": "Integrate your Perplexity models with Portkey",
    "website": "https://docs.perplexity.ai/home",
    "slug": "perplexity-ai",
    "mostCommonModels": [
      "llama-3.1-sonar-small-128k-online",
      "llama-3.1-sonar-large-128k-online",
      "llama-3.1-sonar-huge-128k-online",
      "llama-3.1-sonar-small-128k-chat",
      "llama-3.1-sonar-large-128k-chat"
    ],
    "uptimeLatencyChartsLink": "",
    "discordCommunityLink": "https://discord.com/invite/perplexity-ai",
    "pricingLink": "",
    "documentationLink": "https://docs.perplexity.ai/home"
  },
  "supported": {
    "models": [
      {
        "title": "Chat Completions",
        "description": "Portkey supports all models available on the Perplexity API.",
        "supportedModels": [
          "llama-3.1-sonar-small-128k-online",
          "llama-3.1-sonar-large-128k-online",
          "llama-3.1-sonar-huge-128k-online",
          "llama-3.1-sonar-small-128k-chat",
          "llama-3.1-sonar-large-128k-chat",
          "llama-3.1-8b-instruct",
          "llama-3.1-70b-instruct"
        ],
        "moreModels": "https://docs.perplexity.ai/guides/model-cards"
      },
      {
        "features":[
          {
              "title": "Return Citations",
              "description": "Determines whether or not a request to an online model should return citations.",
              "link": "https://docs.perplexity.ai/api-reference/chat-completions"
          },
          {
              "title": "Search Domain Filter",
              "description": "Given a list of domains, limit the citations used by the online model to URLs from the specified domains.",
              "link": "https://docs.perplexity.ai/api-reference/chat-completions"
          },
          {
              "title": "Return Images",
              "description": "Determines whether or not a request to an online model should return images.",
              "link": "https://docs.perplexity.ai/api-reference/chat-completions"
          },
          {
              "title": "Return Related Questions",
              "description": "Determines whether or not a request to an online model should return related questions.",
              "link": "https://docs.perplexity.ai/api-reference/chat-completions"
          },
          {
              "title": "Search Recency Filter",
              "description": "Returns search results within the specified time interval - does not apply to images.",
              "link": "https://docs.perplexity.ai/api-reference/chat-completions"
          },
        ]
      }
    ],
    "notSupported": []
  },
    "integration": {
      "chatCompletionsCall": {
        "portkeyPythonSDK": {
          "description": "Use Portkey Python SDK to make chat calls to Perplexity chat completions models",
          "codeExample": "sample python code for llama-3.1-sonar-small-128k-online chat call on Perplexity"
        },
        "portkeyNodeSDK": {
          "description": "Use Portkey Node.js SDK to make chat calls to Perplexity chat completions models",
          "codeExample": "sample node.js code for llama-3.1-sonar-small-128k-online chat call on Perplexity"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to make chat calls to Perplexity chat completions models",
          "codeExample": "sample rest api code for llama-3.1-sonar-small-128k-online chat call on Perplexity"
        },
        "openAIPythonSDK": {
          "description": "Use OpenAI Python SDK to make chat calls to Perplexity chat completions models",
          "codeExample": "sample openai SDK python code for llama-3.1-sonar-small-128k-online chat call on Perplexity"
        },
        "openAINodeSDK": {
          "description": "Use OpenAI Node.js SDK to make chat calls to Perplexity chat completions models",
          "codeExample": "sample openai SDK node.js code for llama-3.1-sonar-small-128k-online chat call on Perplexity"
        }
      },
      "integrationViaVirtualKey": {
          "description": "Integrate Perplexity using Portkey's virtual key system",
          "generateVirtualKey": {
              "inline": {
                  "text": "Get your API key from Perplexity and add it to Portkey to create a virtual key.",
                  "screenshot": "insert screenshot here",
                  "description": "You can get your Perplexity API key from the Perplexity website [here](https://www.perplexity.ai/settings/api)."
              }
          },
          "portkeyPythonSDK": {
              "description": "Initialize Portkey with the virtual key in Python",
              "codeExample": "sample python SDK code for llama-3.1-sonar-small-128k-online chat completions call on Perplexity using virtual key"
          },
          "portkeyNodeSDK": {
              "description": "Initialize Portkey with the virtual key in Node.js",
              "codeExample": "sample node.js SDK code for llama-3.1-sonar-small-128k-online chat completions call on Perplexity using virtual key"
          },
          "restAPI": {
              "description": "Use Portkey's REST API to make text calls to Perplexity chat completions models like llama-3.1-sonar-small-128k-online",
              "codeExample": "sample rest api code for llama-3.1-sonar-small-128k-online chat completions call on Perplexity using virtual key"
          },
          "openAIPythonSDK": {
              "description": "Use OpenAI Python SDK to make text calls to Perplexity chat completions models like llama-3.1-sonar-small-128k-online",
              "codeExample": "sample openai SDK python code for llama-3.1-sonar-small-128k-online chat completions call on Perplexity using virtual key"
          },
          "openAINodeSDK": {
              "description": "Use OpenAI Node.js SDK to make text calls to Perplexity chat completions models like llama-3.1-sonar-small-128k-online",
              "codeExample": "sample openai SDK node.js code for llama-3.1-sonar-small-128k-online chat completions call on Perplexity using virtual key"
          }
      },
      "promptPlayground": {
          "description": "Manage and test prompts for Perplexity models in the Prompt Library",
          "screenshot": "insert screenshot here",
          "portkeyPythonSDK": {
              "description": "Use prompts from the Prompt Library in Python",
              "codeExample": "sample python SDK code for using prompts from the Prompt Library on Perplexity"
          },
          "portkeyNodeSDK": {
              "description": "Use prompts from the Prompt Library in Node.js",
              "codeExample": "sample node.js SDK code for using prompts from the Prompt Library on Perplexity"
          },
          "restAPI": {
              "description": "Use Portkey's REST API to manage and test prompts for Perplexity models in the Prompt Library",
              "codeExample": "sample rest api code for using prompts from the Prompt Library on Perplexity"
          },
          "openAIPythonSDK": {
              "description": "Not supported",
              "codeExample": "not supported"
          },
          "openAINodeSDK": {
              "description": "Not supported",
              "codeExample": "not supported"
          }
      }
  },
    "portkeyCapabilities": [
      {
        "title": "Configure Routing",
        "description": "Configure routing for your Cerebras requests",
        "link": "/docs/product/ai-gateway/routing"
      },
      {
        "title": "Add Metadata to Requests",
        "description": "Add metadata to your Cerebras requests",
        "link": "/docs/product/observability/metadata"
      },
      {
        "title": "A/B Test Different Models",
        "description": "A/B test different models",
        "link": "/docs/product/ai-gateway/load-balance"
      },
      {
        "title": "Gain Insights to Requests",
        "description": "Gain insights to your Cerebras requests",
        "link": "/docs/product/observability/traces"
      }
    ],
    "useCases": [],
    "additionalInfo": []
  }
}
