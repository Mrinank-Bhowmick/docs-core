{
  "provider": {
    "name": "AWS Bedrock",
    "imageUrl": "",
    "description": "AWS Bedrock lets you access models from AI21, Anthropic, Meta, Cohere, and more over a single API.",
    "website": "https://aws.amazon.com/bedrock",
    "slug": "bedrock",
    "mostCommonModels": [
      "Claude 3.5 Sonnet",
      "Jurassic",
      "Titan",
      "Command R+",
      "Llama 3.1",
      "Mistral Large",
      "Stable Diffusion 3"
    ],
    "uptimeLatencyChartsLink": "",
    "CommunityLink": "https://community.aws/generative-ai",
    "pricingLink": "https://aws.amazon.com/bedrock/pricing",
    "documentationLink": "https://docs.aws.amazon.com/bedrock/"
  },
  "supported": {
    "modelsListLink": "https://docs.aws.amazon.com/bedrock/latest/userguide/model-ids.html",
    "models": [
      {
        "title": "Chat Completions",
        "description": "Portkey suports all of the chat models offered by Bedrock",
        "modelsList": [
          {
            "provider": "AI21 Labs",
            "models": ["Jurassic-2 Mid", "Jurassic-2 Ultra", "Jamba-Instruct"]
          },
          {
            "provider": "Anthropic",
            "models": [
              "Claude 3 Sonnet",
              "Claude 3.5 Sonnet",
              "Claude 3 Haiku",
              "Claude 3 Opus"
            ]
          },
          {
            "provider": "Cohere",
            "models": ["Command R", "Command R+"]
          },
          {
            "provider": "Mistral AI",
            "models": ["Mistral Large"]
          }
        ]
      },
      {
        "title": "Text Models",
        "description": "Support for Instruct and Text series of models on Bedrock",
        "modelsList": [
          {
            "provider": "Amazon",
            "models": [
              "Titan Text G1 - Express",
              "Titan Text G1 - Lite",
              "Titan Text Premier",
              "Titan Embeddings G1 - Text",
              "Titan Text Embeddings V2"
            ]
          },
          {
            "provider": "Anthropic",
            "models": ["Claude", "Claude Instant"]
          },
          {
            "provider": "Meta",
            "models": [
              "Llama 2 Chat 13B",
              "Llama 2 Chat 70B",
              "Llama 3 8B Instruct",
              "Llama 3 70B Instruct",
              "Llama 3.1 8B Instruct",
              "Llama 3.1 70B Instruct",
              "Llama 3.1 405B Instruct"
            ]
          },
          {
            "provider": "Mistral AI",
            "models": [
              "Mistral 7B Instruct",
              "Mixtral 8X7B Instruct",
              "Mistral Large 2 (24.07)",
              "Mistral Small"
            ]
          }
        ]
      },
      {
        "title": "Embed Models",
        "description": "Portkey suports all embedding models offered by Bedrock",
        "modelsList": [
          {
            "provider": "Amazon",
            "models": [
              "Titan Embeddings G1 - Text",
              "Titan Text Embeddings V2",
              "Titan Multimodal Embeddings G1"
            ]
          },
          {
            "provider": "Cohere",
            "models": ["Embed English", "Embed Multilingual"]
          }
        ]
      },
      {
        "title": "Image Generations",
        "description": "Portkey suports most of the image gen models offered by Bedrock",
        "modelsList": [
          {
            "provider": "Amazon",
            "models": [
              "Titan Image Generator G1 V1",
              "Titan Image Generator G1 V2"
            ]
          },
          {
            "provider": "Stability AI",
            "models": [
              "Stable Diffusion XL",
              "Stable Image Ultra",
              "Stable Image Core"
            ]
          }
        ]
      }
    ],
    "features": [
      {
        "title": "Function / Tool Calling"
      },
      {
        "title": "Parallel Function / Tool Calling"
      },
      {
        "title": "Stream Chat Completions"
      },
      {
        "title": "Stream Completions"
      }
    ],
    "integration": {
      "chatCompletionsCall": {
        "portkeyPythonSDK": {
          "description": "Use Portkey Python SDK to make text calls to Bedrock Anthropic chat completions models",
          "codeExample": "sample python code for Bedrock Anthropic call"
        },
        "portkeyNodeSDK": {
          "description": "Use Portkey Node.js SDK to make text calls to Bedrock Anthropic chat completions models",
          "codeExample": "sample node.js code for Bedrock Anthropic call"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to make text calls to Bedrock Anthropic chat completions models",
          "codeExample": "sample rest api code for Bedrock Anthropic"
        },
        "openAIPythonSDK": {
          "description": "Use OpenAI Python SDK to make calls to Bedrock Anthropic chat completions models",
          "codeExample": "sample openai SDK python code for Bedrock Anthropic call"
        },
        "openAINodeSDK": {
          "description": "Use OpenAI Node.js SDK to make text calls to Bedrock Anthropic chat completions models",
          "codeExample": "sample openai SDK node.js code for Bedrock Anthropic call"
        }
      },
      "embeddingCall": {
        "portkeyPythonSDK": {
          "description": "Use Portkey Python SDK to make embedding calls to Bedrock Cohere Embedding model",
          "codeExample": "sample python code for Bedrock Cohere Embedding model"
        },
        "portkeyNodeSDK": {
          "description": "Use Portkey Node.js SDK to make embedding calls to Bedrock Cohere Embedding model",
          "codeExample": "sample node.js code for Bedrock Cohere Embedding model"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to make embedding calls to Bedrock Cohere Embedding model",
          "codeExample": "sample rest api code for Bedrock Cohere Embedding model"
        },
        "openAIPythonSDK": {
          "description": "Use OpenAI Python SDK to make embedding calls to Bedrock Cohere Embedding model",
          "codeExample": "sample openai SDK python code Bedrock Cohere Embedding model"
        },
        "openAINodeSDK": {
          "description": "Use OpenAI Node.js SDK to make embedding calls to Bedrock Cohere Embedding model",
          "codeExample": "sample openai SDK node.js code for Bedrock Cohere Embedding model"
        }
      },
      "imageCall": {
        "portkeyPythonSDK": {
          "description": "Use Portkey Python SDK to make image generation calls to Bedrock Stability AI models",
          "codeExample": "sample python code for Bedrock Stability AI"
        },
        "portkeyNodeSDK": {
          "description": "Use Portkey Node.js SDK to make image generation calls to Bedrock Stability AI models",
          "codeExample": "sample node.js code for Bedrock Stability AI"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to make image generation calls to Bedrock Stability AI models",
          "codeExample": "sample rest api code for Bedrock Stability AI"
        },
        "openAIPythonSDK": {
          "description": "Use OpenAI Python SDK to make image generation calls to Bedrock Stability AI models",
          "codeExample": "sample openai SDK python code for Bedrock Stability AI"
        },
        "openAINodeSDK": {
          "description": "Use OpenAI Node.js SDK to make image generation calls to Bedrock Stability AI models",
          "codeExample": "sample openai SDK node.js code for Bedrock Stability AI"
        }
      },
      "integrationViaVirtualKey": {
        "description": "Integrate Bedrock using Portkey's virtual key system",
        "steps": [
          {
            "step": "1",
            "description": "Navigate here in the AWS Management Console to obtain your AWS Access Key ID and AWS Secret Access Key.",
            "link": "https://us-east-1.console.aws.amazon.com/iam/home#/security_credentials",
            "image": "<>"
          },
          {
            "step": "2",
            "description": "In the console, you'll find the 'Access keys' section. Click on 'Create access key'.",
            "link": "N/A",
            "image": "<>"
          },
          {
            "step": "3",
            "description": "Copy the Secret Access Key once it is generated, and you can view the Access Key ID along with it.",
            "link": "N/A",
            "image": "<>"
          },
          {
            "step": "4",
            "description": "On the same page under the 'Access keys' section, where you created your Secret Access key, you will also find your Access Key ID. ",
            "link": "https://us-east-1.console.aws.amazon.com/iam/home#/security_credentials",
            "image": "<>"
          },
          {
            "step": "5",
            "description": "And lastly, get Your AWS Region from the Home Page of AWS Bedrock as shown in the image below.",
            "link": "https://us-east-1.console.aws.amazon.com/bedrock/home?region=us-east-1#/overview",
            "image": "<>"
          }
        ],
        "generateVirtualKey": {
          "inline": {
            "text": "Get your API key as per the steps described above and add the details to Portkey to create a virtual key.",
            "screenshot": "insert screenshot here"
          }
        },
        "portkeyPythonSDK": {
          "description": "Initialize Portkey with the virtual key in Python",
          "codeExample": "sample python SDK code for Bedrock Anthropic chat completions call using virtual key"
        },
        "portkeyNodeSDK": {
          "description": "Initialize Portkey with the virtual key in Node.js",
          "codeExample": "sample node.js SDK code for Bedrock Anthropic chat completions call using virtual key"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to make text calls to Bedrock Anthropic models",
          "codeExample": "sample rest api code for Bedrock Anthropic chat completions call using virtual key"
        },
        "openAIPythonSDK": {
          "description": "Use OpenAI Python SDK to make text calls to Bedrock Anthropic chat completions models like claude-3-5-sonnet-20240620",
          "codeExample": "sample openai SDK python code for Bedrock Anthropic chat completions call using virtual key"
        },
        "openAINodeSDK": {
          "description": "Use OpenAI Node.js SDK to make text calls to Bedrock Anthropic chat completions models",
          "codeExample": "sample openai SDK node.js code for Bedrock Anthropic chat completions call using virtual key"
        }
      },
      "promptPlayground": {
        "description": "Manage and test prompts for Bedrock models in the Prompt Library",
        "screenshot": "insert screenshot here",
        "portkeyPythonSDK": {
          "description": "Use prompts from the Prompt Library in Python",
          "codeExample": "sample python SDK code for using prompts from the Prompt Library on Bedrock"
        },
        "portkeyNodeSDK": {
          "description": "Use prompts from the Prompt Library in Node.js",
          "codeExample": "sample node.js SDK code for using prompts from the Prompt Library on Bedrock"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to manage and test prompts for Bedrock models in the Prompt Library",
          "codeExample": "sample rest api code for using prompts from the Prompt Library on Bedrock"
        },
        "openAIPythonSDK": {
          "description": "Not supported",
          "codeExample": "not supported"
        },
        "openAINodeSDK": {
          "description": "Not supported",
          "codeExample": "not supported"
        }
      },
      "notSupported": {
        "modelList": [
          { "provider": "Stability AI", "models": ["All Models"] },
          { "provider": "Any", "models": ["All Text Models"] },
          { "provider": "Any", "models": ["All Embedding Models"] }
        ]
      }
    },
    "specialExamples": [
      {
        "title": "Using Vision Models",
        "description": "Use Portkey's APIs to make a call to Bedrock vision models",
        "portkeyPythonSDK": {
          "description": "Make a call to Bedrock vision models",
          "codeExample": "sample python SDK code for vision models on Bedrock"
        },
        "portkeyNodeSDK": {
          "description": "Make a call to Bedrock vision models",
          "codeExample": "sample node SDK code for vision models on Bedrock"
        },
        "restAPI": {
          "description": "Use Portkey's REST API to make a call to Bedrock vision models",
          "codeExample": "sample rest api code for vision models on Bedrock"
        },
        "openAIPythonSDK": {
          "description": "Using OpenAI Python SDK to make a call to Bedrock vision models",
          "codeExample": "sample openai python SDK code for vision models on Bedrock"
        },
        "openAINodeSDK": {
          "description": "Using OpenAI Node.js SDK to make a call to Bedrock vision models",
          "codeExample": "sample openai node.js SDK code for vision models on Bedrock"
        }
      },
      {
        "title": "Tool Calling",
        "description": "Use Portkey's APIs to make a run a tool calling pipeline for Bedrock models",
        "portkeyPythonSDK": {
          "description": "Make a call to Bedrock Anthropic to run a complete tool calling pipeline",
          "codeExample": "sample python SDK code for tool call to Bedrock Anthropic"
        },
        "portkeyNodeSDK": {
          "description": "Make a call to Bedrock Anthropic to run a complete tool calling pipeline",
          "codeExample": "sample node SDK code for tool call to Bedrock Anthropic"
        },
        "restAPI": {
          "description": "Make a rest API call to Bedrock Anthropic to run a complete tool calling pipeline",
          "codeExample": "sample rest API code for tool call to Bedrock Anthropic"
        },
        "openAIPythonSDK": {
          "description": "Make a call to Bedrock Anthropic to run a complete tool calling pipeline, on OpenAI python SDK",
          "codeExample": "sample OpenAI python SDK code for tool call to Bedrock Anthropic"
        },
        "openAINodeSDK": {
          "description": "Make a call to Bedrock Anthropic to run a complete tool calling pipeline, on OpenAI node SDK",
          "codeExample": "sample OpenAI node SDK code for tool call to Bedrock Anthropic"
        }
      }
    ],
    "portkeyCapabilities": [
      {
        "title": "Configure Routing",
        "description": "Configure routing for your OpenAI requests",
        "link": "/docs/product/ai-gateway/routing"
      },
      {
        "title": "Add Metadata to Requests",
        "description": "Add metadata to your OpenAI requests",
        "link": "/docs/product/observability/metadata"
      },
      {
        "title": "A/B Test Different Models",
        "description": "A/B test different models",
        "link": "/docs/product/ai-gateway/load-balance"
      },
      {
        "title": "Gain Insights to Requests",
        "description": "Gain insights to your OpenAI requests",
        "link": "/docs/product/observability/traces"
      }
    ],
    "useCases": [],
    "additionalInfo": []
  }
}
