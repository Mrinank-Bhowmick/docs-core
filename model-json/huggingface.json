{
    "provider": {
        "name": "HuggingFace",
        "imageUrl": "",
        "description": "HuggingFace is a platform for developers to collaborate on building LLM-powered applications.",
        "website": "https://huggingface.co/",
        "slug": "huggingface",
        "mostCommonModels": [],
        "uptimeLatencyChartsLink": "",
        "discordCommunityLink": "https://huggingface.co/join/discord",
        "pricingLink": "https://huggingface.co/pricing#endpoints",
        "documentationLink": "https://huggingface.co/docs/api-inference/index"
    },
    "supported": {
        "models": [
            {
                "title": "Chat Completions",
                "description": "Portkey supports all OpenAI compliant chat completions models on HuggingFace",
                "supportedModelsList": "https://huggingface.co/models"
            },
            {
                "title": "Completions",
                "description": "Portkey supports all OpenAI compliant completions models on HuggingFace",
                "supportedModelsList": "https://huggingface.co/models"
            }
        ],
        "notSupported": {
            "info": "Portkey currently only supports OpenAI compatible models on HuggingFace",
            "promptPlayground": "Prompt playground is not supported for HuggingFace models"
        },
        "integration": {
            "chatCompletionsCall": {
                "portkeyPythonSDK": {
                    "description": "Use Portkey Python SDK to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample python code for meta-llama/Meta-Llama-3.1-8B-Instruct text call on HuggingFace"
                },
                "portkeyNodeSDK": {
                    "description": "Use Portkey Node.js SDK to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample node.js code for meta-llama/Meta-Llama-3.1-8B-Instruct text call on HuggingFace"
                },
                "restAPI": {
                    "description": "Use Portkey's REST API to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample rest api code for meta-llama/Meta-Llama-3.1-8B-Instruct text call on HuggingFace"
                },
                "openAIPythonSDK": {
                    "description": "Use OpenAI Python SDK to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample openai SDK python code for meta-llama/Meta-Llama-3.1-8B-Instruct text call on HuggingFace"
                },
                "openAINodeSDK": {
                    "description": "Use OpenAI Node.js SDK to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample openai SDK node.js code for meta-llama/Meta-Llama-3.1-8B-Instruct text call on HuggingFace"
                }
            },
            "integrationViaVirtualKey": {
                "description": "Integrate HuggingFace using Portkey's virtual key system",
                "generateVirtualKey": {
                    "inline": {
                        "text": "Get your API key from HuggingFace and add it to Portkey to create a virtual key.",
                        "screenshot": "insert screenshot here",
                        "description": "You can get your HuggingFace API key from the HuggingFace website [here](https://huggingface.co/login)."
                    }
                },
                "portkeyPythonSDK": {
                    "description": "Initialize Portkey with the virtual key in Python",
                    "codeExample": "sample python SDK code for meta-llama/Meta-Llama-3.1-8B-Instruct chat completions call on HuggingFace using virtual key"
                },
                "portkeyNodeSDK": {
                    "description": "Initialize Portkey with the virtual key in Node.js",
                    "codeExample": "sample node.js SDK code for meta-llama/Meta-Llama-3.1-8B-Instruct chat completions call on HuggingFace using virtual key"
                },
                "restAPI": {
                    "description": "Use Portkey's REST API to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample rest api code for meta-llama/Meta-Llama-3.1-8B-Instruct chat completions call on HuggingFace using virtual key"
                },
                "openAIPythonSDK": {
                    "description": "Use OpenAI Python SDK to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample openai SDK python code for meta-llama/Meta-Llama-3.1-8B-Instruct chat completions call on HuggingFace using virtual key"
                },
                "openAINodeSDK": {
                    "description": "Use OpenAI Node.js SDK to make text calls to HuggingFace chat completions models",
                    "codeExample": "sample openai SDK node.js code for meta-llama/Meta-Llama-3.1-8B-Instruct chat completions call on HuggingFace using virtual key"
                }
            },
            "promptPlayground": {
                "description": "Coming soon"
            },
            "specialExamples": [],
            "portkeyCapabilities": [
                {
                    "title": "Configure Routing",
                    "description": "Configure routing for your HuggingFace requests",
                    "link": "/docs/product/ai-gateway/routing"
                },
                {
                    "title": "Add Metadata to Requests",
                    "description": "Add metadata to your HuggingFace requests",
                    "link": "/docs/product/observability/metadata"
                },
                {
                    "title": "A/B Test Different Models",
                    "description": "A/B test different models",
                    "link": "/docs/product/ai-gateway/load-balance"
                },
                {
                    "title": "Gain Insights to Requests",
                    "description": "Gain insights to your HuggingFace requests",
                    "link": "/docs/product/observability/traces"
                }
            ],
            "useCases": [],
            "additionalInfo": []
        }
    }
}